name: Build PHP Images
on:
  workflow_dispatch:
  push:
    branches: [master]
  schedule:
    - cron: "0 0 1,15 * *"
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: eightsystems/laravel-alpine
  DOCKER_IMAGE_NAME: 8sistemas/laravel-alpine
jobs:
  build-images:
    runs-on: ubuntu-latest
    if: (!contains(github.event.head_commit.message, '[skipci]') && !contains(github.event.head_commit.message, '[noci]'))
    strategy:
      fail-fast: false
      max-parallel: 12
      matrix:
        php: ["7.4", "8.0", "8.1"]
        variant: ["mysql", "mysql-nginx", "pgsql-nginx", "pgsql"]
    permissions:
      contents: read
      packages: write
      security-events: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Log into Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }},${{ env.DOCKER_IMAGE_NAME }}

      - name: Build and export Docker image
        uses: docker/build-push-action@v2
        if: github.event_name != 'pull_request'
        with:
          context: ./
          file: ./${{ matrix.php }}/${{ matrix.variant }}/Dockerfile
          load: true
          tags: ${{ env.DOCKER_IMAGE_NAME }}:${{ matrix.php }}-${{ matrix.variant }}-test
          labels: ${{ steps.meta.outputs.labels }}

      - name: Test Image with PHP modules list
        if: github.event_name != 'pull_request'
        run: |
          docker run --rm ${{ env.DOCKER_IMAGE_NAME }}:${{ matrix.php }}-${{ matrix.variant }}-test php -m

      - name: Build Docker image and Push
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./${{ matrix.php }}/${{ matrix.variant }}/Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          platforms: linux/amd64,linux/arm64
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ matrix.php }}-${{ matrix.variant }},${{ env.DOCKER_IMAGE_NAME }}:${{ matrix.php }}-${{ matrix.variant }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Run Security Scan against ${{ matrix.php }}-${{ matrix.variant }}
        uses: anchore/scan-action@v3
        continue-on-error: true
        with:
          image: "ghcr.io/eightsystems/laravel-alpine:${{ matrix.php }}-${{ matrix.variant }}"
          acs-report-enable: true
          fail-build: false

      - name: Build and export Docker image (with Xdebug)
        uses: docker/build-push-action@v2
        if: github.event_name != 'pull_request'
        with:
          context: ./
          file: ./${{ matrix.php }}/${{ matrix.variant }}/Dockerfile
          load: true
          tags: ${{ env.DOCKER_IMAGE_NAME }}:${{ matrix.php }}-${{ matrix.variant }}-xdebug-test
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            BUILD_XDEBUG=1

      - name: Test Image with PHP modules list
        if: github.event_name != 'pull_request'
        run: |
          docker run --rm ${{ env.DOCKER_IMAGE_NAME }}:${{ matrix.php }}-${{ matrix.variant }}-xdebug-test php -m

      - name: Build and push Docker image (with Xdebug)
        uses: docker/build-push-action@v2
        if: github.event_name != 'pull_request'
        with:
          context: ./
          file: ./${{ matrix.php }}/${{ matrix.variant }}/Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ matrix.php }}-${{ matrix.variant }}-xdebug,${{ env.DOCKER_IMAGE_NAME }}:${{ matrix.php }}-${{ matrix.variant }}-xdebug
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            BUILD_XDEBUG=1

      - name: Upload Scan Report for ${{ matrix.php }}-${{ matrix.variant }}
        uses: github/codeql-action/upload-sarif@v2
        continue-on-error: true
        with:
          sarif_file: results.sarif
