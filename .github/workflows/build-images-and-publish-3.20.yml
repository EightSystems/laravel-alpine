name: Build PHP Images (Alpine 3.20)
on:
  workflow_dispatch:
  push:
    branches: [master]
    paths:
      - "8.4/**"
      - "8.3/**"
      - "Dockerfile3.20"
      - ".github/workflows/build-images-and-publish-3.20.yml"
  schedule:
    - cron: "0 0 1,15 * *"
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: eightsystems/laravel-alpine
  DOCKER_IMAGE_NAME: 8sistemas/laravel-alpine
jobs:
  build-images:
    runs-on: ${{ matrix.job.os }}
    name: PHP ${{ matrix.php }} ${{ matrix.variant.tag }} [${{ matrix.job.name }}]
    if: (!contains(github.event.head_commit.message, '[skipci]') && !contains(github.event.head_commit.message, '[noci]'))
    strategy:
      fail-fast: false
      max-parallel: 4
      matrix:
        job:
          - {
              name: amd64,
              os: ubuntu-24.04,
              pretty-name: Build and push amd64 image,
            }
          - {
              name: arm64,
              os: ubuntu-24.04-arm,
              pretty-name: Build and push arm64 image,
            }
        php: ["8.3", "8.4"]
        variant:
          [
            { "tag": "mysql", "has_nginx": 0, "database_module": "mysqli" },
            {
              "tag": "mysql-nginx",
              "has_nginx": 1,
              "database_module": "mysqli",
            },
            {
              "tag": "pgsql-nginx",
              "has_nginx": 1,
              "database_module": "pgsql",
            },
            { "tag": "pgsql", "has_nginx": 0, "database_module": "pgsql" },
          ]
    permissions:
      contents: read
      packages: write
      security-events: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Log into Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }},${{ env.DOCKER_IMAGE_NAME }}

      - name: Build and export Docker image
        uses: docker/build-push-action@v5
        if: github.event_name != 'pull_request'
        with:
          context: ./
          file: ./Dockerfile3.20
          load: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: ${{ env.DOCKER_IMAGE_NAME }}:${{ matrix.php }}-alpine3.20-${{ matrix.variant.tag }}-test-${{ matrix.job.name }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            BUILD_XDEBUG=0
            PHP_VERSION=${{ matrix.php }}
            DATABASE_MODULE=${{ matrix.variant.database_module }}
            HAS_NGINX=${{ matrix.variant.has_nginx }}

      - name: Test Image with PHP modules list
        if: github.event_name != 'pull_request'
        run: |
          docker run --rm ${{ env.DOCKER_IMAGE_NAME }}:${{ matrix.php }}-alpine3.20-${{ matrix.variant.tag }}-test-${{ matrix.job.name }} php -m

      - name: Build Docker image and Push
        uses: docker/build-push-action@v5
        with:
          context: ./
          file: ./Dockerfile3.20
          push: ${{ github.event_name != 'pull_request' }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ matrix.php }}-alpine3.20-${{ matrix.variant.tag }}-${{ matrix.job.name }}
            ${{ env.DOCKER_IMAGE_NAME }}:${{ matrix.php }}-alpine3.20-${{ matrix.variant.tag }}-${{ matrix.job.name }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            BUILD_XDEBUG=0
            PHP_VERSION=${{ matrix.php }}
            DATABASE_MODULE=${{ matrix.variant.database_module }}
            HAS_NGINX=${{ matrix.variant.has_nginx }}

      - name: Run Security Scan against ${{ matrix.php }}-alpine3.20-${{ matrix.variant.tag }}-${{ matrix.job.name }}
        uses: anchore/scan-action@v3
        continue-on-error: true
        with:
          image: "ghcr.io/eightsystems/laravel-alpine:${{ matrix.php }}-alpine3.20-${{ matrix.variant.tag }}-${{ matrix.job.name }}"
          fail-build: false

      - name: Build and export Docker image (with Xdebug)
        uses: docker/build-push-action@v5
        if: github.event_name != 'pull_request'
        with:
          context: ./
          file: ./Dockerfile3.20
          load: true
          tags: ${{ env.DOCKER_IMAGE_NAME }}:${{ matrix.php }}-alpine3.20-${{ matrix.variant.tag }}-xdebug-test-${{ matrix.job.name }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            BUILD_XDEBUG=1
            PHP_VERSION=${{ matrix.php }}
            DATABASE_MODULE=${{ matrix.variant.database_module }}
            HAS_NGINX=${{ matrix.variant.has_nginx }}

      - name: Test Image with PHP modules list
        if: github.event_name != 'pull_request'
        run: |
          docker run --rm ${{ env.DOCKER_IMAGE_NAME }}:${{ matrix.php }}-alpine3.20-${{ matrix.variant.tag }}-xdebug-test-${{ matrix.job.name }} php -m

      - name: Build and push Docker image (with Xdebug)
        uses: docker/build-push-action@v5
        if: github.event_name != 'pull_request'
        with:
          context: ./
          file: ./Dockerfile3.20
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ matrix.php }}-alpine3.20-${{ matrix.variant.tag }}-xdebug-${{ matrix.job.name }}
            ${{ env.DOCKER_IMAGE_NAME }}:${{ matrix.php }}-alpine3.20-${{ matrix.variant.tag }}-xdebug-${{ matrix.job.name }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            BUILD_XDEBUG=1
            PHP_VERSION=${{ matrix.php }}
            DATABASE_MODULE=${{ matrix.variant.database_module }}
            HAS_NGINX=${{ matrix.variant.has_nginx }}

      - name: Upload Scan Report for ${{ matrix.php }}-alpine3.20-${{ matrix.variant.tag }}-${{ matrix.job.name }}
        uses: github/codeql-action/upload-sarif@v3
        continue-on-error: true
        with:
          sarif_file: results.sarif
